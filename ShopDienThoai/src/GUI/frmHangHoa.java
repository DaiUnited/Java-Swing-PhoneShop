/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import DAO.HangHoaDao;
import DAO.LoaiHangDao;
import MODEL.HangHoa;
import MODEL.LoaiHang;
import java.awt.Image;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import java.io.File;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *
 * @author daiun
 */
public class frmHangHoa extends javax.swing.JInternalFrame {
    List<HangHoa> listHH = new ArrayList<>();
    List<LoaiHang> listLH = new ArrayList<>();
    DefaultTableModel tblModel = new DefaultTableModel();
    DefaultComboBoxModel<String> comboBoxModel;
    int index = 0;
    String imgPath = "";

    /**
     * Creates new form frmHangHoa
     */
    public frmHangHoa()  {
        initComponents();
        fillDataToTable();
        loadComboBox();
    }
    
    private void setEditable(boolean enable) {
    txtMaHang.setEditable(enable);
    txtTenHang.setEditable(enable);
    txtSL.setEditable(enable);
    txtDVT.setEditable(enable);
    txtBaoHanh.setEditable(enable);
    txtGhiChu.setEditable(enable);
    txtGiaNhap.setEditable(enable);
    txtMoTa.setEditable(enable);
}

    
    private void loadComboBox() {
        LoaiHangDao Dao = new LoaiHangDao();
        listLH = Dao.LoadComboBox();
        comboBoxModel = new DefaultComboBoxModel<>();
        for (LoaiHang lh : listLH) {
            comboBoxModel.addElement(String.valueOf(lh.getMaLoaiHang()));
        }
        comboLoaiHang.setModel(comboBoxModel);
    }

    
    public void fillDataToTable(){
    HangHoaDao Dao = new HangHoaDao();
    listHH = Dao.XemThongTin();
    tblModel = (DefaultTableModel) tblMatHang.getModel();
    tblModel.setRowCount(0);
    for (HangHoa tb : listHH) {
        Object[] row = new Object[]{tb.getMaHang(), tb.getTenHang(), tb.getMaLoaiHang(), tb.getSoLuong(), tb.getDVT(), tb.getBaoHanh(), tb.getGiaNhap(), tb.getMoTa(), tb.getHinhAnh()};
        tblModel.addRow(row);
    }
    tblMatHang.setModel(tblModel);
}
    public void xemThongTin(String tim)
    {
        tim = txt_Tim.getText();
        HangHoaDao hhDao = new HangHoaDao();
        listHH = hhDao.TimTheoTen(tim);
        tblModel = (DefaultTableModel) tblMatHang.getModel();
        tblModel.setRowCount(0);
        for (HangHoa tb : listHH) {
                Object[] row = new Object[]{tb.getMaHang(),
                    tb.getTenHang(),
                    tb.getMaLoaiHang(),
                    tb.getSoLuong(),
                    tb.getDVT(),
                    tb.getBaoHanh(),
                    String.format("%,.0f", tb.getGiaNhap()),
                    tb.getMoTa(),
                    tb.getHinhAnh()};
                tblModel.addRow(row);
            }
            tblMatHang.setModel(tblModel);
    }

 public void showForm() {
    index = tblMatHang.getSelectedRow();
    if (index < 0) {
        JOptionPane.showMessageDialog(this, "Bạn chưa chọn dòng trên bảng");
        return;
    } else {
        HangHoa hh = listHH.get(index);
        txtMaHang.setText(hh.getMaHang());
        txtTenHang.setText(hh.getTenHang());
        comboLoaiHang.setSelectedItem(hh.getMaLoaiHang());
        txtSL.setText(String.valueOf(hh.getSoLuong()));
        txtDVT.setText(hh.getDVT());
        txtBaoHanh.setText(String.valueOf(hh.getBaoHanh()));
        txtGiaNhap.setText(String.valueOf(hh.getGiaNhap()));
        txtMoTa.setText(hh.getMoTa());
        imgPath =hh.getHinhAnh();
        displayImage(hh.getHinhAnh());
    }
    setEditable(true);
}
 private void clearForm() {
    txtMaHang.setText("");
    txtTenHang.setText("");
    txtSL.setText("");
    txtDVT.setText("");
    txtBaoHanh.setText("");
    txtGhiChu.setText("");
    txtGiaNhap.setText("");
    txtMoTa.setText("");
    comboLoaiHang.setSelectedIndex(0);
}

    public void displayImage(String imagePath){
         ImageIcon imageIcon = new ImageIcon("src\\Image\\"+imagePath);
         Image image = imageIcon.getImage().getScaledInstance(200, 200, Image.SCALE_SMOOTH);
         imageIcon = new ImageIcon(image);
         HinhAnh.setIcon(imageIcon);
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelMatHang = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtMaHang = new javax.swing.JTextField();
        txtDVT = new javax.swing.JTextField();
        txtGiaNhap = new javax.swing.JTextField();
        txtMoTa = new javax.swing.JTextField();
        txtBaoHanh = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenHang = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        comboLoaiHang = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        txtSL = new javax.swing.JTextField();
        txtGhiChu = new javax.swing.JFormattedTextField();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnNhap = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblMatHang = new javax.swing.JTable();
        btnHinhAnh = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        HinhAnh = new javax.swing.JLabel();
        txt_Tim = new javax.swing.JTextField();
        btnTim = new javax.swing.JButton();
        btnSortTen = new javax.swing.JButton();
        btnSortSL = new javax.swing.JButton();
        btnSortGia = new javax.swing.JButton();

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanelMatHang.setBackground(new java.awt.Color(204, 255, 204));
        jPanelMatHang.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Thông tin mặt hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 0, 14))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel2.setText("Mã Hàng:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel5.setText("ĐVT:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel6.setText("Bảo Hành:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel7.setText("(tháng)");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel8.setText("Ghi Chú");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel10.setText("Giá Nhập");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel11.setText("Mô Tả:");

        txtMaHang.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        txtDVT.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtDVT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDVTKeyTyped(evt);
            }
        });

        txtGiaNhap.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtGiaNhap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGiaNhapKeyTyped(evt);
            }
        });

        txtMoTa.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        txtBaoHanh.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtBaoHanh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBaoHanhKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel3.setText("Tên Hàng:");

        txtTenHang.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel4.setText("Loại Hàng:");

        comboLoaiHang.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        comboLoaiHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboLoaiHangActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel12.setText("Số lượng:");

        txtSL.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtSL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSLKeyTyped(evt);
            }
        });

        txtGhiChu.setEditable(false);
        txtGhiChu.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        javax.swing.GroupLayout jPanelMatHangLayout = new javax.swing.GroupLayout(jPanelMatHang);
        jPanelMatHang.setLayout(jPanelMatHangLayout);
        jPanelMatHangLayout.setHorizontalGroup(
            jPanelMatHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMatHangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMatHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8))
                .addGap(20, 20, 20)
                .addGroup(jPanelMatHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaHang)
                    .addComponent(txtGhiChu, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanelMatHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMatHangLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(txtMoTa))
                    .addGroup(jPanelMatHangLayout.createSequentialGroup()
                        .addGroup(jPanelMatHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelMatHangLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTenHang, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDVT, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelMatHangLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboLoaiHang, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(txtGiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addGroup(jPanelMatHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelMatHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBaoHanh, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(txtSL))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap())
        );
        jPanelMatHangLayout.setVerticalGroup(
            jPanelMatHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMatHangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMatHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(txtMaHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDVT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBaoHanh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtTenHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMatHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtGiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12)
                    .addComponent(txtSL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(comboLoaiHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMatHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtMoTa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnThem.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThem.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnThem.setMinimumSize(new java.awt.Dimension(70, 30));
        btnThem.setPreferredSize(new java.awt.Dimension(70, 30));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/edit.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSua.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnSua.setMinimumSize(new java.awt.Dimension(70, 30));
        btnSua.setPreferredSize(new java.awt.Dimension(70, 30));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXoa.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnXoa.setMinimumSize(new java.awt.Dimension(70, 30));
        btnXoa.setPreferredSize(new java.awt.Dimension(70, 30));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnNhap.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnNhap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/excel.png"))); // NOI18N
        btnNhap.setText("Nhập");
        btnNhap.setToolTipText("Import dữ liệu từ file Excel");
        btnNhap.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNhap.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnNhap.setMinimumSize(new java.awt.Dimension(70, 30));
        btnNhap.setPreferredSize(new java.awt.Dimension(70, 30));
        btnNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 22)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("•-> DANH SÁCH  MẶT HÀNG <-•");

        tblMatHang.setBackground(new java.awt.Color(204, 255, 153));
        tblMatHang.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tblMatHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Hàng", "Tên Hàng", "Loại Hàng", "Số Lượng", "DVT", "Bảo Hành", "Giá Nhập", "Mô Tả", "Hình Ảnh"
            }
        ));
        tblMatHang.setMinimumSize(new java.awt.Dimension(300, 64));
        tblMatHang.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblMatHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMatHangMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblMatHang);

        btnHinhAnh.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnHinhAnh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/imaga_icon.jpg"))); // NOI18N
        btnHinhAnh.setText("Ảnh");
        btnHinhAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHinhAnhActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HinhAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HinhAnh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        btnTim.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        btnTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Search.png"))); // NOI18N
        btnTim.setText("Tìm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        btnSortTen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/sort.png"))); // NOI18N
        btnSortTen.setText("Sort Tên");
        btnSortTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortTenActionPerformed(evt);
            }
        });

        btnSortSL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/sort.png"))); // NOI18N
        btnSortSL.setText("Số Lượng");
        btnSortSL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortSLActionPerformed(evt);
            }
        });

        btnSortGia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/sort.png"))); // NOI18N
        btnSortGia.setText("Giá Nhập");
        btnSortGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortGiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnSortTen)
                        .addGap(18, 18, 18)
                        .addComponent(btnSortSL)
                        .addGap(18, 18, 18)
                        .addComponent(btnSortGia)
                        .addGap(46, 46, 46)
                        .addComponent(jLabel1)
                        .addGap(48, 48, 48)
                        .addComponent(txt_Tim, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(btnTim))
                    .addComponent(jPanelMatHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnNhap, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSua, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHinhAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                    .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(39, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnHinhAnh))
                    .addComponent(jPanelMatHang, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_Tim)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSortTen)
                            .addComponent(btnSortSL)
                            .addComponent(btnSortGia)))
                    .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboLoaiHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboLoaiHangActionPerformed
       
    }//GEN-LAST:event_comboLoaiHangActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed

    HangHoaDao dao = new HangHoaDao();
    HangHoa hh = new HangHoa();
    hh.setMaHang(txtMaHang.getText());
    hh.setTenHang(txtTenHang.getText());
    hh.setMaLoaiHang(Integer.parseInt((String) comboLoaiHang.getSelectedItem()));
        int soLuong = Integer.parseInt(txtSL.getText());
        
        if (soLuong <= 0) {
            JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
    hh.setSoLuong(soLuong);
    hh.setDVT(txtDVT.getText());
    hh.setBaoHanh(Integer.parseInt(txtBaoHanh.getText()));
        double giaNhap = Double.parseDouble(txtGiaNhap.getText());
        
        if (giaNhap <= 0) {
            JOptionPane.showMessageDialog(this, "Giá nhập phải lớn hơn 0", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
    hh.setGiaNhap(giaNhap);
    hh.setMoTa(txtMoTa.getText());
    hh.setHinhAnh(imgPath);
    int result = dao.them(hh);
    if (result > 0) {
        JOptionPane.showMessageDialog(this, "Thêm thành công");
        fillDataToTable();
    } else {
        JOptionPane.showMessageDialog(this, "Thêm thất bại");
    }                
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        txtMaHang.setEditable(false);
        HangHoaDao hhDao = new HangHoaDao();
        HangHoa hh = new HangHoa();
        hh.setTenHang(txtTenHang.getText());
        hh.setMaLoaiHang(Integer.parseInt((String) comboLoaiHang.getSelectedItem()));
            int soLuong = Integer.parseInt(txtSL.getText());

            if (soLuong <= 0) {
                JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
        hh.setSoLuong(soLuong);
        hh.setDVT(txtDVT.getText());
        hh.setBaoHanh(Integer.parseInt(txtBaoHanh.getText()));
        double giaNhap = Double.parseDouble(txtGiaNhap.getText());
        
        if (giaNhap <= 0) {
            JOptionPane.showMessageDialog(this, "Giá nhập phải lớn hơn 0", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        hh.setGiaNhap(giaNhap);
        hh.setMoTa(txtMoTa.getText());
        hh.setHinhAnh(imgPath);
        hh.setMaHang(txtMaHang.getText());
        int x = hhDao.sua(hh);
        if (x > 0) {
            JOptionPane.showMessageDialog(this, "Sửa thành công");
            fillDataToTable();
        } else {
            JOptionPane.showMessageDialog(this, "Sửa thất bại");
}

    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
       String maHang = txtMaHang.getText().trim();
        if (maHang.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn hàng hóa muốn xóa.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa hàng hóa này?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            HangHoaDao hhDao = new HangHoaDao();
            int x = hhDao.xoa(maHang);
            if (x > 0) {
                fillDataToTable();
                JOptionPane.showMessageDialog(this, "Đã xóa hàng hóa thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Xóa hàng hóa thất bại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapActionPerformed
        setEditable(true);
        clearForm();
    }//GEN-LAST:event_btnNhapActionPerformed

    private void tblMatHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMatHangMouseClicked
        showForm();
    }//GEN-LAST:event_tblMatHangMouseClicked

    private void btnHinhAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHinhAnhActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image files", "jpg", "jpeg", "png");
        fileChooser.setFileFilter(filter);
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String imageName = selectedFile.getName();
            imgPath = imageName;
            displayImage(selectedFile.getAbsolutePath());
        }
    }//GEN-LAST:event_btnHinhAnhActionPerformed

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        // TODO add your handling code here:
        xemThongTin(txt_Tim.getText());
    }//GEN-LAST:event_btnTimActionPerformed

    private void btnSortTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortTenActionPerformed
        // TODO add your handling code here:
        Collections.sort(listHH, new Comparator<HangHoa>() {
        @Override
        public int compare(HangHoa h1, HangHoa h2) {
            return h1.getTenHang().compareToIgnoreCase(h2.getTenHang());
        }
    });
    updateTable();
    }//GEN-LAST:event_btnSortTenActionPerformed

    private void btnSortGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortGiaActionPerformed
        // TODO add your handling code here:
      Collections.sort(listHH, new Comparator<HangHoa>() {
        @Override
        public int compare(HangHoa h1, HangHoa h2) {
            return Double.compare(h1.getGiaNhap(), h2.getGiaNhap());
        }
    });
    updateTable();
    }//GEN-LAST:event_btnSortGiaActionPerformed

    private void btnSortSLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortSLActionPerformed
        // TODO add your handling code here:
        Collections.sort(listHH, new Comparator<HangHoa>() {
        @Override
        public int compare(HangHoa h1, HangHoa h2) {
            return Integer.compare(h1.getSoLuong(), h2.getSoLuong());
        }
    });
    updateTable();
    }//GEN-LAST:event_btnSortSLActionPerformed

    private void txtBaoHanhKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBaoHanhKeyTyped
        // TODO add your handling code here:
        char sdt = evt.getKeyChar();
        String text = ((javax.swing.JTextField) evt.getSource()).getText();
        if (!Character.isDigit(sdt)) {
            evt.consume();
        }
        if (text.length() >= 2) {
            evt.consume();
        }
    }//GEN-LAST:event_txtBaoHanhKeyTyped

    private void txtSLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSLKeyTyped
        // TODO add your handling code here:
        char so = evt.getKeyChar();
        if (!Character.isDigit(so)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtSLKeyTyped

    private void txtGiaNhapKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGiaNhapKeyTyped
        // TODO add your handling code here:
        char so = evt.getKeyChar();
        if (!Character.isDigit(so)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtGiaNhapKeyTyped

    private void txtDVTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDVTKeyTyped
        // TODO add your handling code here:
        char ten = evt.getKeyChar();
        if (!Character.isLetter(ten) && !Character.isISOControl(ten)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtDVTKeyTyped
            private void updateTable() {
    tblModel.setRowCount(0);
    for (HangHoa hh : listHH) {
        Object[] row = new Object[] {
            hh.getMaHang(),
            hh.getTenHang(),
            hh.getMaLoaiHang(),
            hh.getSoLuong(),
            hh.getDVT(),
            hh.getBaoHanh(),
            String.format("%,.0f", hh.getGiaNhap()),
            hh.getMoTa(),
            hh.getHinhAnh()
        };
        tblModel.addRow(row);
    }
    tblMatHang.setModel(tblModel);
}   
    private void orderBySL()
      {
          Comparator<HangHoa> com = new Comparator<HangHoa>() {
              @Override
              public int compare(HangHoa o1, HangHoa o2) {
                  Integer d1=o1.getSoLuong();
                  Integer d2 =o2.getSoLuong();
                  return d1.compareTo(d2);
              }
          };
          Collections.sort(listHH,com);
          Collections.reverse(listHH);
      }
    private void orderByGia()
      {
          Comparator<HangHoa> com = new Comparator<HangHoa>() {
              @Override
              public int compare(HangHoa o1, HangHoa o2) {
                  Double d1=o1.getGiaNhap();
                  Double d2 =o2.getGiaNhap();
                  return d1.compareTo(d2);
              }
          };
          Collections.sort(listHH,com);
          Collections.reverse(listHH);
      }
    private void orderByTen() {
    Collections.sort(listHH, new Comparator<HangHoa>() {
        @Override
        public int compare(HangHoa sp1, HangHoa sp2) {
            
            String tenSp1 = sp1.getTenHang();
            String tenSp2 = sp2.getTenHang(); 
            return tenSp1.compareTo(tenSp2);
        }
    });
    
}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HinhAnh;
    private javax.swing.JButton btnHinhAnh;
    private javax.swing.JButton btnNhap;
    private javax.swing.JButton btnSortGia;
    private javax.swing.JButton btnSortSL;
    private javax.swing.JButton btnSortTen;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> comboLoaiHang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelMatHang;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblMatHang;
    private javax.swing.JTextField txtBaoHanh;
    private javax.swing.JTextField txtDVT;
    private javax.swing.JFormattedTextField txtGhiChu;
    private javax.swing.JTextField txtGiaNhap;
    private javax.swing.JTextField txtMaHang;
    private javax.swing.JTextField txtMoTa;
    private javax.swing.JTextField txtSL;
    private javax.swing.JTextField txtTenHang;
    private javax.swing.JTextField txt_Tim;
    // End of variables declaration//GEN-END:variables
}
